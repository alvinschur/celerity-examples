h2. Introduction

This project provides examples of testing web applications that use javascript and AJAX.  The main tools are "Cucumber":cucumber to describe the required behaviour and "Celerity":celerity for simulating a web browser and executing the javascript.

The examples were developed with Celerity version 0.0.4.

Note: 
* "Webrat":webrat is another excellent tool that can be used with Cucumber.  Check out the fork at "johnnyt/webrat":http://github.com/johnnyt/webrat/tree/master/
* "jQuery":jquery is used in the javascript

Specifying the required behaviour consists of 2 parts:
# running the web application using your favourite staging environment
# driving the web application using jRuby, cucumber, celerity, rspec, and friends

Quickstart: read feature files and step definitions in features/

h2. Getting started

Celerity requires "jRuby":jruby.  Celerity, cucumber, rspec, and other gems used for specifying the required behaviour are installed in the jRuby environment.

Libraries required for running the application
Install
* "Ramaze":ramaze - Easy web app framework
* "jRuby":jruby
* "Celerity":celerity
* "Cucumber":cucumber
* "Rspec":rspec
* "hpricot":hpricot

Verify the web application is installed correctly by
# ruby start.rb
# browse to "localhost:7000":http://localhost:7000
You should see "Welcome to Ramaze"

Verify jRuby, cucumber, rspec are installed correctly by
# jrake features


You should see output similar to

<pre>
  Feature: Verify Cucumber, celerity, rspec are installed  # features/verify_cucumber_installation.feature
    In order verify web application behaviour
    the development team should be able to 
    run cucumber and celerity
    Scenario: visit the web application home page  # features/verify_cucumber_installation.feature:6
      When I visit the home page                   # features/step_definitions/first_steps.rb:19
      Then I should see "Welcome"                  # features/step_definitions/first_steps.rb:35


  2 steps passed
</pre>

h2. Tips

h3. Links to Celerity documentation

* "How to select elements":http://celerity.rubyforge.org/yard/Celerity/Container.html
* "FAQ":http://celerity.rubyforge.org/wiki/wiki.pl
* "Tutorial":http://celerity.rubyforge.org/wiki/wiki.pl?GettingStarted
* "API docs":http://celerity.rubyforge.org/yard/

h3. Wait for AJAX to finish

AJAX calls are executed asynchronously, which means we have to tell celerity to wait for the AJAX call to finish before trying to verify the results. 

<pre>
When "I wait for the AJAX call to finish" do
  @browser.page.getEnclosingWindow().getThreadManager().joinAll(10000)
end
</pre>

Which came from the "HtmlUnit FAQ":http://htmlunit.sourceforge.net/faq.html#AJAXDoesNotWork

"Celerity FAQ":http://celerity.rubyforge.org/wiki/wiki.pl?GettingStarted#ajax shows another solution.

h3. Automatically executing the AJAX response doesn't work, yet

Celerity uses "HtmlUnit":htmlunit under the covers to simulate a web browser and execute javascript.  HtmlUnit recently updated support for jQuery which should resolve this problem.

A work around is to 'eval' the response manually.
<pre>
  $(document).ready(function() {
    $.get('http://localhost:7000/ajax_responses/returning_javascript', function(data) {
      eval(data);
    });
  });  
</pre>


h2. Using Celerity from jirb

You can explore celerity by using *jirb* as follows
<pre>
  > jirb
  > require 'rubygems'
  > require 'celerity'
  > browser = Celerity::IE.new
  > browser.goto('http://localhost:7000/on_page_load')
  > browser.page.as_xml.include '
</pre>


[cucumber]http://github.com/aslakhellesoy/cucumber/wikis
[celerity]http://celerity.rubyforge.org
[jruby]http://jruby.codehaus.org
[ramaze]http://ramaze.net
[rspec]http://rspec.info
[webrat]http://github.com/brynary/webrat/tree/master
[jquery]http://jquery.com/
[hpricot]http://code.whytheluckystiff.net/hpricot/
[htmlunit]http://htmlunit.sourceforge.net/
